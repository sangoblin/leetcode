class Solution {
public:

    vector<string> ans;
    static const char p[2];
    int len;
    
    void genP(string s, int left, int right)
    {
        if (left+right>=2*len)
        {
            ans.push_back(s);
            return;
        }
        
        if (left == right)
        {
            s+='(';
            genP(s, left+1, right);
        }
        else if (left == len)
        {
            s += ')';
            genP(s, left, right+1);
        }
        else
        {
            for (int i=0; i!=2; ++i)
            {
                genP(s+p[i], left+1-i, right+i);
            }
        }
    }
    
    vector<string> generateParenthesis(int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int available;
        ans.clear();
        len = n;
        
        genP("", 0, 0); 
        
        return ans;
    }
};

const char Solution::p[2] = {'(', ')'};
