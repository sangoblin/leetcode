class Solution {
public:
    int divide(int dividend, int divisor) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int sign = 1, res = 0;
        pair<int,int> pre[sizeof(int)*8];
        
        if ((dividend>=0 && divisor>=0) || (dividend<0 && divisor<0))
            sign = 1;
        else 
            sign = -1;
        
        unsigned _dividend = abs(dividend);
        unsigned _divisor = abs(divisor);
        unsigned int tmp1 = _divisor, tmp2=1;
        int i;
        
        if (_divisor == INT_MAX+1)
        return (_dividend==INT_MAX+1)?1:0;
        
        for (i=0; i<sizeof(int)*8; ++i)
        {
            pre[i].first = tmp1;
            pre[i].second = tmp2;
            tmp1 <<= 1;
            tmp2 <<= 1;
            if (tmp1 >= _dividend)
                break;
        }
        if (tmp1 == _dividend)
        {
            pre[++i].first = tmp1;
        	pre[i].second = tmp2;
        }
        
        for (int j=i; j>=0; --j)
        {
            if (_dividend>=pre[j].first)
            {
                _dividend -= pre[j].first;
                res += pre[j].second;
            }
        }
        
        return sign*res;
    }
};
