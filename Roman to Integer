class Solution {
public:
    int romanToInt(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        map<char, int> roman{{'I', 1}, {'V', 5}, {'X', 10}, {'L', 50}, {'C', 100}, {'D', 500},
        {'M', 1000}};
        
        vector<char> romanC {'M', 'D', 'C', 'L', 'X', 'V', 'I'};
        
        int len = s.size(), lenC = romanC.size(), j, ans = 0;
        
        for (int i=0; i<len-1; ++i)
        {
            for (j=0; j<lenC; ++j)
            {
                if (s[i] == romanC[j])
                    break;
            }

            if (s[i]=='C' && (s[i+1]=='M' || s[i+1]=='D'))
                ans -= roman[s[i]];            
            else if (s[i]=='X' && (s[i+1]=='L' || s[i+1]=='C'))
                ans -= roman[s[i]];
            else if (s[i]=='I' && (s[i+1]=='V' || s[i+1]=='X'))
                ans -= roman[s[i]];
            else 
                ans += roman[s[i]];
        }

        ans += roman[s[len-1]];

        return ans;
    }
};
