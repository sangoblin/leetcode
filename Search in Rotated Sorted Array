class Solution {
public:
    int search(int A[], int n, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int low = 0, high = n-1, med;
        
        while (low <= high)
        {
            med = low+(high-low)/2;
            
            if (A[med] == target)  
                return med;
            else if (A[med] > target)
            {
                if (A[med]>=A[low] && A[low]>target)
                {
                    int val = search(A+med+1, high-med, target);
                    return val==-1?-1:val+med+1;
                }
                else if ((A[med]>=A[low] && A[low]<=target) || A[med]<A[low])
                    return search(A, med-low, target);
            }
            else if (A[med] < target)
            {
                if (A[med]<=A[high] && A[high]<target)
                    return search(A, med-low, target);
                else if ((A[med]<=A[high] && A[high]>=target) || A[med]>A[high])
                {
                    int val = search(A+med+1, high-med, target);
                    return -1==val?-1:val+med+1;
                }
            }
        }
        return -1;
    }
};
